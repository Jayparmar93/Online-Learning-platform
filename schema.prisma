datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String    @unique
  password      String
  role          Role      @default(STUDENT)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  enrolledCourses CourseEnrollment[]
  progress      Progress[]
  quizAttempts  QuizAttempt[]
}

model Course {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  imageUrl    String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  lessons     Lesson[]
  enrollments CourseEnrollment[]
}

model CourseEnrollment {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  userId      String    @db.ObjectId
  courseId    String    @db.ObjectId
  user        User      @relation(fields: [userId], references: [id])
  course      Course    @relation(fields: [courseId], references: [id])
  enrolledAt  DateTime  @default(now())

  @@unique([userId, courseId])
}

model Lesson {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  videoUrl    String
  courseId    String    @db.ObjectId
  course      Course    @relation(fields: [courseId], references: [id])
  order       Int
  quiz        Quiz?
  progress    Progress[]
}

model Quiz {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  lessonId    String    @unique @db.ObjectId
  lesson      Lesson    @relation(fields: [lessonId], references: [id])
  questions   Question[]
  attempts    QuizAttempt[]
}

model Question {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  quizId      String    @db.ObjectId
  quiz        Quiz      @relation(fields: [quizId], references: [id])
  text        String
  options     String[]
  correctAnswer Int
}

model Progress {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  userId      String    @db.ObjectId
  user        User      @relation(fields: [userId], references: [id])
  lessonId    String    @db.ObjectId
  lesson      Lesson    @relation(fields: [lessonId], references: [id])
  completed   Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([userId, lessonId])
}

model QuizAttempt {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  userId      String    @db.ObjectId
  user        User      @relation(fields: [userId], references: [id])
  quizId      String    @db.ObjectId
  quiz        Quiz      @relation(fields: [quizId], references: [id])
  score       Int
  createdAt   DateTime  @default(now())
}

enum Role {
  STUDENT
  ADMIN
} 